# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            $fusionAuthApplicationId: '%env(FUSIONAUTH_APPLICATION_ID)%'
            $googleClientId: '%env(OAUTH_GOOGLE_ID)%'
            $googleClientSecret: '%env(OAUTH_GOOGLE_SECRET)%'
            $oauthRedirectUri: '%env(OAUTH_REDIRECT_URI)%'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Service\FusionAuthUserService:
        arguments:
            $fusionAuthClient: '@fusionauth.client'

    App\Service\FusionAuthUserRegistrationService:
        arguments:
            $fusionAuthClient: '@fusionauth.client'

    App\Service\FusionAuthJwtService:
        arguments:
            $fusionAuthClient: '@fusionauth.client'

    App\Service\FusionAuthWebhookService:
        arguments:
            $fusionAuthClient: '@fusionauth.client'

    App\Service\FusionAuthIdentityProviderService:
        arguments:
            $fusionAuthClient: '@fusionauth.client'

    App\Service\FusionAuthApplicationService:
        arguments:
            $fusionAuthClient: '@fusionauth.client'

    App\EventListener\AuthenticationFailureListener:
        tags:
            - { name: kernel.event_listener, event: kernel.response }